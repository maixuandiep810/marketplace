// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using marketplace.Data.EF;

namespace marketplace.Data.Migrations
{
    [DbContext(typeof(marketplaceDbContext))]
    partial class marketplaceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("TaiKhoanVaiTro");
                });

            modelBuilder.Entity("marketplace.Data.Entities.ChiTietDanhMuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("DanhMucId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("ntext");

                    b.Property<string>("NgonNguId")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasAlternateKey("DanhMucId", "NgonNguId");

                    b.HasIndex("NgonNguId");

                    b.ToTable("ChiTietDanhMuc");
                });

            modelBuilder.Entity("marketplace.Data.Entities.ChiTietDonHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("DonHangId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("DonHangId", "SanPhamId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("marketplace.Data.Entities.ChiTietSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .HasColumnType("ntext");

                    b.Property<string>("NgonNguId")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenDayDu")
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.HasAlternateKey("SanPhamId", "NgonNguId");

                    b.HasIndex("NgonNguId");

                    b.ToTable("ChiTietSanPham");
                });

            modelBuilder.Entity("marketplace.Data.Entities.CuaHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("LangNgheId")
                        .HasColumnType("int");

                    b.Property<string>("MaCH")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("MoTa")
                        .HasColumnType("ntext");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenDayDu")
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.HasAlternateKey("Ten");

                    b.HasIndex("LangNgheId");

                    b.ToTable("CuaHang");
                });

            modelBuilder.Entity("marketplace.Data.Entities.DanhMuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<bool>("HienThiTrangChu")
                        .HasColumnType("bit");

                    b.Property<string>("MaSo")
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("DanhMuc");
                });

            modelBuilder.Entity("marketplace.Data.Entities.DonHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<string>("MaDH")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("marketplace.Data.Entities.GiaoDich", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("DonHangId")
                        .HasColumnType("int");

                    b.Property<int?>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<string>("LoiNhan")
                        .HasColumnType("ntext");

                    b.Property<string>("MaGD")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NhaCungCap")
                        .HasColumnType("ntext");

                    b.Property<decimal>("Phi")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonHangId")
                        .IsUnique();

                    b.HasIndex("KhachHangId");

                    b.ToTable("GiaoDich");
                });

            modelBuilder.Entity("marketplace.Data.Entities.GioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("marketplace.Data.Entities.HinhAnh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("DoiTuongId")
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("LaAnhMacDinh")
                        .HasColumnType("bit");

                    b.Property<string>("Loai")
                        .HasColumnType("ntext");

                    b.Property<string>("MaHA")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("MoTa")
                        .HasColumnType("ntext");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Url")
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.ToTable("HinhAnh");
                });

            modelBuilder.Entity("marketplace.Data.Entities.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<Guid>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("TaiKhoanId");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("marketplace.Data.Entities.LangNghe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("MaLN")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenDayDu")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.HasAlternateKey("Ten");

                    b.ToTable("LangNghe");
                });

            modelBuilder.Entity("marketplace.Data.Entities.LangNgheDanhMuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("DanhMucId")
                        .HasColumnType("int");

                    b.Property<int>("LangNgheId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("LangNgheId", "DanhMucId");

                    b.HasIndex("DanhMucId");

                    b.ToTable("LangNgheDanhMuc");
                });

            modelBuilder.Entity("marketplace.Data.Entities.NgonNgu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("MaNN")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("MacDinh")
                        .HasColumnType("bit");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("NgonNgu");
                });

            modelBuilder.Entity("marketplace.Data.Entities.NguoiBan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CuaHangId")
                        .HasColumnType("int");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("MaNB")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<Guid>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("TaiKhoanId");

                    b.HasIndex("CuaHangId");

                    b.ToTable("NguoiBan");
                });

            modelBuilder.Entity("marketplace.Data.Entities.QuanLyDonHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChiTietDonHangId")
                        .HasColumnType("int");

                    b.Property<int>("CuaHangId")
                        .HasColumnType("int");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("DonHangId")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiBanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("CuaHangId", "DonHangId");

                    b.HasIndex("ChiTietDonHangId");

                    b.HasIndex("DonHangId");

                    b.HasIndex("NguoiBanId");

                    b.ToTable("QuanLyDonHang");
                });

            modelBuilder.Entity("marketplace.Data.Entities.QuyenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BitFields")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("HanhDong")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("TenEntity")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("QuyenEntity");
                });

            modelBuilder.Entity("marketplace.Data.Entities.QuyenEntityTaiKhoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("EntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuyenEntityId")
                        .HasColumnType("int");

                    b.Property<Guid>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuyenEntityId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("QuyenEntityTaiKhoan");
                });

            modelBuilder.Entity("marketplace.Data.Entities.QuyenEntityVaiTro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("QuyenEntityId")
                        .HasColumnType("int");

                    b.Property<Guid>("VaiTroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuyenEntityId");

                    b.HasIndex("VaiTroId");

                    b.ToTable("QuyenEntityVaiTro");
                });

            modelBuilder.Entity("marketplace.Data.Entities.QuyenRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("HanhDong")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("LaRouteCanXacThuc")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("PathRegex")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("QuyenRoute");
                });

            modelBuilder.Entity("marketplace.Data.Entities.QuyenRouteVaiTro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("QuyenRouteId")
                        .HasColumnType("int");

                    b.Property<Guid>("VaiTroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuyenRouteId");

                    b.HasIndex("VaiTroId");

                    b.ToTable("QuyenRouteVaiTro");
                });

            modelBuilder.Entity("marketplace.Data.Entities.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("DonGiaGoc")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("LuotXem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("MaSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("marketplace.Data.Entities.SanPhamDanhMuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("DanhMucId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("DanhMucId", "SanPhamId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("SanPhamDanhMuc");
                });

            modelBuilder.Entity("marketplace.Data.Entities.TaiKhoan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("LaNguoiBan")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("marketplace.Data.Entities.VaiTro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VaiTro");
                });

            modelBuilder.Entity("marketplace.Data.Entities.ChiTietDanhMuc", b =>
                {
                    b.HasOne("marketplace.Data.Entities.DanhMuc", "DanhMuc")
                        .WithMany("ChiTietDanhMucs")
                        .HasForeignKey("DanhMucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.NgonNgu", "NgonNgu")
                        .WithMany("ChiTietDanhMucs")
                        .HasForeignKey("NgonNguId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.ChiTietDonHang", b =>
                {
                    b.HasOne("marketplace.Data.Entities.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("DonHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.SanPham", "SanPham")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.ChiTietSanPham", b =>
                {
                    b.HasOne("marketplace.Data.Entities.NgonNgu", "NgonNgu")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("NgonNguId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.SanPham", "SanPham")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.CuaHang", b =>
                {
                    b.HasOne("marketplace.Data.Entities.LangNghe", "LangNghe")
                        .WithMany("CuaHangs")
                        .HasForeignKey("LangNgheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.DonHang", b =>
                {
                    b.HasOne("marketplace.Data.Entities.KhachHang", "KhachHang")
                        .WithMany("DonHangs")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.GiaoDich", b =>
                {
                    b.HasOne("marketplace.Data.Entities.DonHang", "DonHang")
                        .WithOne("GiaoDich")
                        .HasForeignKey("marketplace.Data.Entities.GiaoDich", "DonHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.KhachHang", null)
                        .WithMany("GiaoDichs")
                        .HasForeignKey("KhachHangId");
                });

            modelBuilder.Entity("marketplace.Data.Entities.GioHang", b =>
                {
                    b.HasOne("marketplace.Data.Entities.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.SanPham", "SanPham")
                        .WithMany("GioHangs")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.KhachHang", b =>
                {
                    b.HasOne("marketplace.Data.Entities.TaiKhoan", "TaiKhoan")
                        .WithOne("KhachHang")
                        .HasForeignKey("marketplace.Data.Entities.KhachHang", "TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.LangNgheDanhMuc", b =>
                {
                    b.HasOne("marketplace.Data.Entities.DanhMuc", "DanhMuc")
                        .WithMany("LangNgheDanhMucs")
                        .HasForeignKey("DanhMucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.LangNghe", "LangNghe")
                        .WithMany("LangNgheDanhMucs")
                        .HasForeignKey("LangNgheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.NguoiBan", b =>
                {
                    b.HasOne("marketplace.Data.Entities.CuaHang", "CuaHang")
                        .WithMany("NguoiBans")
                        .HasForeignKey("CuaHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.TaiKhoan", "TaiKhoan")
                        .WithOne("NguoiBan")
                        .HasForeignKey("marketplace.Data.Entities.NguoiBan", "TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.QuanLyDonHang", b =>
                {
                    b.HasOne("marketplace.Data.Entities.ChiTietDonHang", "ChiTietDonHang")
                        .WithMany()
                        .HasForeignKey("ChiTietDonHangId");

                    b.HasOne("marketplace.Data.Entities.CuaHang", "CuaHang")
                        .WithMany("QuanLyDonHangs")
                        .HasForeignKey("CuaHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.DonHang", "DonHang")
                        .WithMany("QuanLyDonHangs")
                        .HasForeignKey("DonHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.NguoiBan", "NguoiBan")
                        .WithMany("QuanLyDonHangs")
                        .HasForeignKey("NguoiBanId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("marketplace.Data.Entities.QuyenEntityTaiKhoan", b =>
                {
                    b.HasOne("marketplace.Data.Entities.QuyenEntity", "QuyenEntity")
                        .WithMany("QuyenEntityTaiKhoans")
                        .HasForeignKey("QuyenEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("QuyenEntityTaiKhoans")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.QuyenEntityVaiTro", b =>
                {
                    b.HasOne("marketplace.Data.Entities.QuyenEntity", "QuyenEntity")
                        .WithMany("QuyenEntityVaiTros")
                        .HasForeignKey("QuyenEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.VaiTro", "VaiTro")
                        .WithMany("QuyenEntityVaiTros")
                        .HasForeignKey("VaiTroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.QuyenRouteVaiTro", b =>
                {
                    b.HasOne("marketplace.Data.Entities.QuyenRoute", "QuyenRoute")
                        .WithMany("QuyenRouteVaiTros")
                        .HasForeignKey("QuyenRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.VaiTro", "VaiTro")
                        .WithMany("QuyenRouteVaiTros")
                        .HasForeignKey("VaiTroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marketplace.Data.Entities.SanPhamDanhMuc", b =>
                {
                    b.HasOne("marketplace.Data.Entities.DanhMuc", "DanhMuc")
                        .WithMany("SanPhamDanhMucs")
                        .HasForeignKey("DanhMucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marketplace.Data.Entities.SanPham", "SanPham")
                        .WithMany("SanPhamDanhMucs")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
